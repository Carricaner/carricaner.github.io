<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>All Posts - Darren's Blog</title><link>https://carrican.github.io/posts/</link><description>All Posts | Darren's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 26 Nov 2022 20:21:43 +0800</lastBuildDate><atom:link href="https://carrican.github.io/posts/" rel="self" type="application/rss+xml"/><item><title>Intro to AOP &amp; AspectJ</title><link>https://carrican.github.io/aspectj/</link><pubDate>Sat, 26 Nov 2022 20:21:43 +0800</pubDate><author>Author</author><guid>https://carrican.github.io/aspectj/</guid><description>簡單介紹如何使用 AspectJ 實作 AOP</description></item><item><title>進入設計模式的世界 -- 狀態機模式 ( State pattern )</title><link>https://carrican.github.io/state-machine/</link><pubDate>Thu, 11 Aug 2022 11:44:04 +0800</pubDate><author>Author</author><guid>https://carrican.github.io/state-machine/</guid><description>讓我嘗試用 Java 來實作狀態模式吧！</description></item><item><title>跨伺服器交易處理 — 認識二階段提交 ( 2PC )</title><link>https://carrican.github.io/two-pc-intro/</link><pubDate>Mon, 28 Feb 2022 17:58:23 +0800</pubDate><author>Author</author><guid>https://carrican.github.io/two-pc-intro/</guid><description>當一個交易包含了多個需要透過網路溝通的節點時，我們該如何處理呢？</description></item></channel></rss>